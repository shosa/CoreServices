events {
    worker_connections 1024;
}

http {
    # Upstream per CoreMachine
    upstream coremachine-backend {
        server coremachine-backend:3001;
    }

    upstream coremachine-frontend {
        server coremachine-frontend:3000;
    }

    # Upstream per CoreDocument
    upstream coredocument-backend {
        server coredocument-backend:3003;
    }

    upstream coredocument-frontend {
        server coredocument-frontend:3000;
    }

    # CoreMachine - Porta 80
    server {
        listen 80;
        server_name localhost;

        client_max_body_size 100M;

        # API routes per CoreMachine
        location /api {
            proxy_pass http://coremachine-backend;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
        }

        # Frontend routes per CoreMachine
        location / {
            proxy_pass http://coremachine-frontend;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
        }
    }

    # CoreDocument - Porta 81
    server {
        listen 81;
        server_name localhost;

        client_max_body_size 100M;

        # API routes per CoreDocument
        location /api {
            proxy_pass http://coredocument-backend;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
        }

        # Frontend routes per CoreDocument
        location / {
            proxy_pass http://coredocument-frontend;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
        }
    }

    # HTTPS configuration (futuro)
    # server {
    #     listen 443 ssl http2;
    #     server_name coremachine.yourdomain.com;
    #
    #     ssl_certificate /etc/nginx/ssl/coremachine-fullchain.pem;
    #     ssl_certificate_key /etc/nginx/ssl/coremachine-privkey.pem;
    #
    #     client_max_body_size 100M;
    #
    #     location /api {
    #         proxy_pass http://coremachine-backend;
    #         ...
    #     }
    #
    #     location / {
    #         proxy_pass http://coremachine-frontend;
    #         ...
    #     }
    # }
    #
    # server {
    #     listen 443 ssl http2;
    #     server_name coredocument.yourdomain.com;
    #
    #     ssl_certificate /etc/nginx/ssl/coredocument-fullchain.pem;
    #     ssl_certificate_key /etc/nginx/ssl/coredocument-privkey.pem;
    #
    #     client_max_body_size 100M;
    #
    #     location /api {
    #         proxy_pass http://coredocument-backend;
    #         ...
    #     }
    #
    #     location / {
    #         proxy_pass http://coredocument-frontend;
    #         ...
    #     }
    # }
}
